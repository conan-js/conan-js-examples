{"ast":null,"code":"import _slicedToArray from\"/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/orchestratingState/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/orchestratingState/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/orchestratingState/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/orchestratingState/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as React from\"react\";import{Conan}from\"conan-js-core\";import{Objects}from\"conan-js-core\";export function OrchestratingStateApp(){var market$=Conan.light('market',[{id:'TSLA',price:1000},{id:'AAPL',price:350}]);var stockOrder$=Conan.light('stockOrders',[{stockId:'AAPL',buy:300,sell:400},{stockId:'TSLA',buy:900,sell:1200}]);function changeStockPrice(stockId,delta){market$.do.update(function(current){return current.map(function(it){var newValue=it.price+delta;return it.id!==stockId?it:_objectSpread(_objectSpread({},it),{},{price:newValue>0?newValue:0});});});}function changeStockOrder(stockId,delta,toChange){stockOrder$.do.update(function(current){return current.map(function(it){var newValue=it[toChange]+delta;return it.stockId!==stockId?it:_objectSpread(_objectSpread({},it),{},_defineProperty({},toChange,newValue>0?newValue:0));});});}var alertsByStock$=Conan.light('alerts',{});var alertStream$=alertsByStock$.map(function(alertsByStock){var newStream=[];Objects.foreachEntry(alertsByStock,function(stockAlerts){return newStream=[].concat(_toConsumableArray(newStream),_toConsumableArray(stockAlerts));});return newStream.sort(function(left,right){return left.timestamp-right.timestamp;});});stockOrder$.tuple(market$).addDataReaction({name:\"checking alerts\",dataConsumer:function dataConsumer(_ref){var _ref2=_slicedToArray(_ref,2),stockOrders=_ref2[0],stocks=_ref2[1];var newAlerts=[];stockOrders.forEach(function(stockOrder){var stock=stocks.find(function(it){return it.id===stockOrder.stockId;});var operation;if(stock.price>=stockOrder.sell){operation='sell';}else if(stock.price<=stockOrder.buy){operation='buy';}else{operation='keep';}newAlerts.push({operation:operation,orderSnapshot:stockOrder,stockSnapshot:stock,timestamp:Date.now()});});var nextState=_objectSpread({},alertsByStock$.getData());newAlerts.forEach(function(newAlert){if(nextState[newAlert.stockSnapshot.id]==null){nextState[newAlert.stockSnapshot.id]=[newAlert];}else{var alertsForStock=nextState[newAlert.stockSnapshot.id];var lastAlert=alertsForStock[alertsForStock.length-1];if(!Objects.deepEquals(newAlert.stockSnapshot,lastAlert.stockSnapshot)||!Objects.deepEquals(newAlert.orderSnapshot,lastAlert.orderSnapshot)){alertsForStock.push(newAlert);}}});alertsByStock$.do.update(nextState);}});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"PRICES\"),market$.connectLive(function(stockPrices){return/*#__PURE__*/React.createElement(\"ul\",null,stockPrices.map(function(stockPrice){return/*#__PURE__*/React.createElement(\"li\",null,stockPrice.id,\" - \",stockPrice.price,\"$ \\xA0\",/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockPrice(stockPrice.id,+10);}},\"+10\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockPrice(stockPrice.id,+100);}},\"+100\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockPrice(stockPrice.id,-10);}},\"-10\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockPrice(stockPrice.id,-100);}},\"-100\"));}));}),/*#__PURE__*/React.createElement(\"h1\",null,\"ORDERS\"),stockOrder$.connectLive(function(stockOrders){return/*#__PURE__*/React.createElement(\"ul\",null,stockOrders.map(function(stockOrder){return/*#__PURE__*/React.createElement(\"li\",null,stockOrder.stockId,\" \",/*#__PURE__*/React.createElement(\"br\",null),\"BUY: \",stockOrder.buy,\" \\xA0\",/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockOrder(stockOrder.stockId,+10,'buy');}},\"+10\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockOrder(stockOrder.stockId,+100,'buy');}},\"+100\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockOrder(stockOrder.stockId,-10,'buy');}},\"-10\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockOrder(stockOrder.stockId,-100,'buy');}},\"-100\"),/*#__PURE__*/React.createElement(\"br\",null),\"SELL: \",stockOrder.sell,\" \\xA0\",/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockOrder(stockOrder.stockId,+10,'sell');}},\"+10\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockOrder(stockOrder.stockId,+100,'sell');}},\"+100\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockOrder(stockOrder.stockId,-10,'sell');}},\"-10\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return changeStockOrder(stockOrder.stockId,-100,'sell');}},\"-100\"),/*#__PURE__*/React.createElement(\"br\",null));}));}),/*#__PURE__*/React.createElement(\"h1\",null,\"ALERTS\"),alertStream$.connectLive(function(stockAlerts){return/*#__PURE__*/React.createElement(\"ul\",null,stockAlerts.reverse().map(function(it){return/*#__PURE__*/React.createElement(\"li\",null,it.operation,\" - \",it.stockSnapshot.id,\" - \",it.stockSnapshot.price,\" [\",it.operation==='buy'?it.orderSnapshot.buy:it.operation==='sell'?it.orderSnapshot.sell:\"\".concat(it.orderSnapshot.buy,\"/\").concat(it.orderSnapshot.sell),\"]\");}));}));}","map":{"version":3,"sources":["/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/orchestratingState/src/app.tsx"],"names":["React","Conan","Objects","OrchestratingStateApp","market$","light","id","price","stockOrder$","stockId","buy","sell","changeStockPrice","delta","do","update","current","map","it","newValue","changeStockOrder","toChange","alertsByStock$","alertStream$","alertsByStock","newStream","foreachEntry","stockAlerts","sort","left","right","timestamp","tuple","addDataReaction","name","dataConsumer","stockOrders","stocks","newAlerts","forEach","stockOrder","stock","find","operation","push","orderSnapshot","stockSnapshot","Date","now","nextState","getData","newAlert","alertsForStock","lastAlert","length","deepEquals","connectLive","stockPrices","stockPrice","reverse"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {Reducers} from \"conan-js-core\";\nimport {Conan} from \"conan-js-core\";\nimport {IKeyValuePairs} from \"conan-js-core\";\nimport {Objects} from \"conan-js-core\";\n\nexport interface ProductPriceReducers extends Reducers<ProductUnitPrice>{\n    $incrementPriceBy10(): ProductUnitPrice;\n    $decrementPriceBy10(): ProductUnitPrice;\n}\ninterface ProductUnitPrice {\n    priceUsd: number;\n    id: string;\n}\n\n\nexport function OrchestratingStateApp(): React.ReactElement {\n    interface StockAlert {\n        operation: 'buy' | 'sell' | 'keep',\n        stockSnapshot: StockPrice,\n        orderSnapshot: StockOrder,\n        timestamp: number\n    }\n\n    interface StockPrice {\n        id: string,\n        price: number,\n    }\n\n    interface StockOrder {\n        stockId: string,\n        sell: number,\n        buy: number,\n    }\n\n    const market$ = Conan.light<StockPrice[]>('market', [{\n        id: 'TSLA',\n        price: 1000\n    },{\n        id: 'AAPL',\n        price: 350\n    }]);\n\n    const stockOrder$ = Conan.light<StockOrder[]>('stockOrders', [{\n        stockId: 'AAPL',\n        buy: 300,\n        sell: 400\n    },{\n        stockId: 'TSLA',\n        buy: 900,\n        sell: 1200\n    }]);\n\n    function changeStockPrice (stockId: string, delta: number) {\n        market$.do.update(current=>\n            current.map(it=>{\n                let newValue = it.price + delta;\n                return it.id !== stockId ?\n                    it :\n                    {...it, price: newValue > 0 ? newValue : 0};\n            })\n        )\n    }\n\n    function changeStockOrder (stockId: string, delta: number, toChange: 'buy' | 'sell') {\n        stockOrder$.do.update(current=>\n            current.map(it=> {\n                let newValue = it[toChange] + delta;\n                return it.stockId !== stockId ?\n                        it :\n                        {...it, [toChange]: newValue > 0 ? newValue : 0};\n                }\n            )\n        )\n    }\n\n\n    const alertsByStock$ = Conan.light<IKeyValuePairs<StockAlert[]>>('alerts', {});\n\n    const alertStream$ = alertsByStock$.map<StockAlert[]>(alertsByStock => {\n        let newStream: StockAlert[] = [];\n        Objects.foreachEntry(alertsByStock, (stockAlerts)=>newStream = [...newStream, ...stockAlerts])\n        return newStream.sort((left, right)=>left.timestamp - right.timestamp);\n    });\n\n\n\n\n    stockOrder$.tuple(market$).addDataReaction({\n        name: `checking alerts`,\n        dataConsumer: ([stockOrders, stocks])=> {\n            let newAlerts: StockAlert[] = [];\n            stockOrders.forEach(stockOrder=>{\n                const stock = stocks.find(it=>it.id === stockOrder.stockId);\n                let operation: 'buy' | 'sell' | 'keep';\n                if (stock.price >= stockOrder.sell) {\n                    operation= 'sell';\n                } else if (stock.price <= stockOrder.buy) {\n                    operation= 'buy';\n                } else {\n                    operation= 'keep';\n                }\n                newAlerts.push({\n                    operation,\n                    orderSnapshot: stockOrder,\n                    stockSnapshot: stock,\n                    timestamp: Date.now()\n                })\n            });\n\n            let nextState: IKeyValuePairs<StockAlert[]> = {...alertsByStock$.getData()};\n            newAlerts.forEach(newAlert=>{\n                if (nextState[newAlert.stockSnapshot.id] == null){\n                    nextState[newAlert.stockSnapshot.id] = [newAlert];\n                }  else {\n                    let alertsForStock:StockAlert[] = nextState[newAlert.stockSnapshot.id];\n                    let lastAlert = alertsForStock[alertsForStock.length -1];\n                    if (\n                        !Objects.deepEquals(newAlert.stockSnapshot, lastAlert.stockSnapshot) ||\n                        !Objects.deepEquals(newAlert.orderSnapshot, lastAlert.orderSnapshot)\n                    ){\n                        alertsForStock.push(newAlert);\n                    }\n                }\n            })\n\n            alertsByStock$.do.update(nextState);\n        }\n    })\n\n    return (<div>\n        <h1>PRICES</h1>\n        {market$.connectLive( stockPrices=> (\n            <ul>\n                {stockPrices.map(stockPrice=>(\n                    <li>{stockPrice.id} - {stockPrice.price}$ &nbsp;\n                        <button onClick={()=>changeStockPrice(stockPrice.id, +10)}>+10</button>\n                        <button onClick={()=>changeStockPrice(stockPrice.id, +100)}>+100</button>\n                        <button onClick={()=>changeStockPrice(stockPrice.id, -10)}>-10</button>\n                        <button onClick={()=>changeStockPrice(stockPrice.id, -100)}>-100</button>\n                    </li>\n                ))}\n            </ul>\n        ))}\n        <h1>ORDERS</h1>\n        {stockOrder$.connectLive(stockOrders=>(\n            <ul>\n                {stockOrders.map(stockOrder=><li>\n                    {stockOrder.stockId} <br/>\n                    BUY: {stockOrder.buy} &nbsp;\n                    <button onClick={()=>changeStockOrder(stockOrder.stockId, +10, 'buy')}>+10</button>\n                    <button onClick={()=>changeStockOrder(stockOrder.stockId, +100, 'buy')}>+100</button>\n                    <button onClick={()=>changeStockOrder(stockOrder.stockId, -10, 'buy')}>-10</button>\n                    <button onClick={()=>changeStockOrder(stockOrder.stockId, -100, 'buy')}>-100</button>\n                    <br/>\n                    SELL: {stockOrder.sell} &nbsp;\n                    <button onClick={()=>changeStockOrder(stockOrder.stockId, +10, 'sell')}>+10</button>\n                    <button onClick={()=>changeStockOrder(stockOrder.stockId, +100, 'sell')}>+100</button>\n                    <button onClick={()=>changeStockOrder(stockOrder.stockId, -10, 'sell')}>-10</button>\n                    <button onClick={()=>changeStockOrder(stockOrder.stockId, -100, 'sell')}>-100</button>\n                    <br/>\n                </li>)}\n            </ul>\n        ))}\n\n        <h1>ALERTS</h1>\n        {alertStream$.connectLive((stockAlerts)=>(\n            <ul>\n                {stockAlerts.reverse().map(it=><li>\n                    {it.operation} - {it.stockSnapshot.id} - {it.stockSnapshot.price} [{\n                        it.operation === 'buy'? it.orderSnapshot.buy :\n                        it.operation === 'sell'? it.orderSnapshot.sell :\n                        `${it.orderSnapshot.buy}/${it.orderSnapshot.sell}`}\n                    ]\n                </li>)}\n            </ul>\n        ))}\n    </div>)\n}\n"]},"metadata":{},"sourceType":"module"}