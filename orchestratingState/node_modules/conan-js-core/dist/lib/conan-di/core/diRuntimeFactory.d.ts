import { DiRuntime } from './diRuntime';
import { DiInvocationResolver } from './diInvocationResolver';
import { DiInvocationBuilderFactory } from './diInvocationBuilder';
import { DiMetadata } from './annotations/diAnnotationsDomain';
import { KeyValueCache } from "../../conan-utils/keyValueCache";
import { IBiFunction, IProducer } from "../../conan-utils/typesHelper";
export declare class DiRuntimeFactory {
    static readonly DI_INVOCATION_BUILDER_FACTORY: DiInvocationBuilderFactory;
    static readonly cacheTBR: IProducer<KeyValueCache>;
    static readonly DI_INVOCATION_RESOLVER_PROVIDER: (cache: KeyValueCache, diReducer: IBiFunction<DiMetadata, any, any>) => DiInvocationResolver;
    static create(diReducer?: IBiFunction<DiMetadata, any, any>): DiRuntime;
}
