import * as React from "react";
import { ReactStateContext, StateConnect, StateMapConnect } from "./stateConnect";
export class ContextStateMapConnect extends React.Component {
    render() {
        return React.createElement(ReactStateContext.Consumer, null, (reactThread) => {
            if (reactThread == null) {
                throw new Error(`trying to access the state from the context, but it was not found, did you specify the state up in the rendering tree?`);
            }
            return React.createElement(StateMapConnect, { from: reactThread, into: this.props.into, mapper: this.props.mapper, fallbackValue: this.props.fallbackValue });
        });
    }
}
export class ContextStateConnect extends React.Component {
    render() {
        return React.createElement(ReactStateContext.Consumer, null, (reactThread) => {
            if (reactThread == null) {
                throw new Error(`trying to access the state from the context, but it was not found, did you specify the state up in the rendering tree?`);
            }
            return React.createElement(StateConnect, { from: reactThread, into: this.props.into, fallbackValue: this.props.fallbackValue });
        });
    }
}
export const contextStateConnect = (into, fallbackValue) => {
    return React.createElement(ContextStateConnect, { into: into, fallbackValue: fallbackValue });
};
export const contextStateMapConnect = (into, mapper, fallbackValue) => {
    return React.createElement(ContextStateMapConnect, { into: into, fallbackValue: fallbackValue, mapper: mapper });
};
//# sourceMappingURL=contextStateConnectMap.js.map