import { DiRuntimeFactory } from "./diRuntimeFactory";
export class DiContextFactory {
    static createContext(contextDef, aux) {
        let diRuntime = DiRuntimeFactory.create();
        let from = Object.assign(Object.assign({}, contextDef), aux);
        let keys;
        if (aux) {
            keys = [...Object.keys(contextDef), ...Object.keys(aux)];
        }
        else {
            keys = Object.keys(contextDef);
        }
        let result = {};
        let context = Object.assign(Object.assign({}, contextDef), aux);
        (keys).forEach(key => {
            let constr = from[key];
            result[key] = diRuntime.invoke(constr, result, context);
        });
        return result;
    }
}
//# sourceMappingURL=diContext.js.map