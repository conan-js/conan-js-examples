import { DiUtils } from '../diUtils';
import { diAnnotationsCrud } from './diAnnotations';
import { Functions } from "../../../conan-utils/functions";
export class DiAnnotationsMetadataFactory {
    create(from) {
        let dependencyName = DiUtils.beanName(from);
        let argumentNames = Functions.extractArgNames(from);
        let diParams = {};
        let annotationsMetaData = diAnnotationsCrud.getAnnotationsMetaData(from);
        if (annotationsMetaData) {
            annotationsMetaData.diAnnotations.forEach(it => {
                let argumentName = argumentNames[it.onConstructorParamIndex];
                diParams[argumentName] = {
                    name: argumentName,
                    type: it.type,
                    payload: it.injectable,
                    propsProvider: it.cascadeProperties
                };
            });
        }
        return {
            dependencyName: dependencyName,
            argumentNames: argumentNames,
            diParams: diParams,
            constructor: from
        };
    }
}
//# sourceMappingURL=diAnnotatinosMetadataFactory.js.map