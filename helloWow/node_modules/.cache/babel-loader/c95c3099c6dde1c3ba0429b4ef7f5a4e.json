{"ast":null,"code":"import*as React from\"react\";import{Asaps,Conan}from\"conan-js-core\";export function HelloWowApp(){var yetAnotherCounter$=Conan.light('counter',0);return/*#__PURE__*/React.createElement(\"div\",null,yetAnotherCounter$.connectLive(function(counterValue){return/*#__PURE__*/React.createElement(\"h1\",null,counterValue);}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return yetAnotherCounter$.do.update(3);}},\"setValueTo3\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return yetAnotherCounter$.do.update(function(current){return++current;});}},\"increase by one\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return yetAnotherCounter$.do.updateAsap(Asaps.delayed(3,3000));}},\"setValueTo3 - asnyc\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return yetAnotherCounter$.do.updateAsap(Asaps.delayed(function(){return yetAnotherCounter$.getData()+1;},3000));}},\"increase by one - async\"),/*#__PURE__*/React.createElement(\"h1\",null,\"EVEN NUMBERS: \",yetAnotherCounter$.filter(function(it){return it%2===0;}).connectLive(function(counterValue){return/*#__PURE__*/React.createElement(\"span\",null,counterValue);})),/*#__PURE__*/React.createElement(\"h1\",null,\"DOUBLE: \",yetAnotherCounter$.map(function(it){return it*2;}).connectLive(function(counterValue){return/*#__PURE__*/React.createElement(\"span\",null,counterValue);})));}","map":{"version":3,"sources":["/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/helloWow/src/app.tsx"],"names":["React","Asaps","Conan","HelloWowApp","yetAnotherCounter$","light","connectLive","counterValue","do","update","current","updateAsap","delayed","getData","filter","it","map"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,KAAR,CAAeC,KAAf,KAA2B,eAA3B,CAGA,MAAO,SAASC,CAAAA,WAAT,EAA2C,CAC9C,GAAMC,CAAAA,kBAAkB,CAAGF,KAAK,CAACG,KAAN,CAAoB,SAApB,CAA+B,CAA/B,CAA3B,CAEA,mBAAQ,+BACHD,kBAAkB,CAACE,WAAnB,CACD,SAACC,YAAD,qBAAiB,8BAAKA,YAAL,CAAjB,EADC,CADG,cAIJ,8BAAQ,OAAO,CAAE,yBAAIH,CAAAA,kBAAkB,CAACI,EAAnB,CAAsBC,MAAtB,CAA6B,CAA7B,CAAJ,EAAjB,gBAJI,cAOJ,8BAAQ,OAAO,CAAE,yBAAIL,CAAAA,kBAAkB,CAACI,EAAnB,CAAsBC,MAAtB,CAA6B,SAAAC,OAAO,QAAE,EAAEA,OAAJ,EAApC,CAAJ,EAAjB,oBAPI,cAUJ,8BAAQ,OAAO,CAAE,yBAAIN,CAAAA,kBAAkB,CAACI,EAAnB,CAAsBG,UAAtB,CACjBV,KAAK,CAACW,OAAN,CAAc,CAAd,CAAiB,IAAjB,CADiB,CAAJ,EAAjB,wBAVI,cAeJ,8BAAQ,OAAO,CAAE,yBAAIR,CAAAA,kBAAkB,CAACI,EAAnB,CAAsBG,UAAtB,CACjBV,KAAK,CAACW,OAAN,CAAc,iBAAIR,CAAAA,kBAAkB,CAACS,OAAnB,GAA+B,CAAnC,EAAd,CAAoD,IAApD,CADiB,CAAJ,EAAjB,4BAfI,cAoBJ,+CACeT,kBAAkB,CAACU,MAAnB,CAA0B,SAAAC,EAAE,QAAEA,CAAAA,EAAE,CAAG,CAAL,GAAW,CAAb,EAA5B,EAA4CT,WAA5C,CACX,SAACC,YAAD,qBAAiB,gCAAOA,YAAP,CAAjB,EADW,CADf,CApBI,cAyBJ,yCACaH,kBAAkB,CAACY,GAAnB,CAAuB,SAAAD,EAAE,QAAEA,CAAAA,EAAE,CAAG,CAAP,EAAzB,EAAmCT,WAAnC,CACT,SAACC,YAAD,qBAAiB,gCAAOA,YAAP,CAAjB,EADS,CADb,CAzBI,CAAR,CA+BH","sourcesContent":["import * as React from \"react\";\nimport {Asaps, Conan} from \"conan-js-core\";\n\n\nexport function HelloWowApp(): React.ReactElement {\n    const yetAnotherCounter$ = Conan.light<number>('counter', 0);\n\n    return (<div>\n        {yetAnotherCounter$.connectLive (\n        (counterValue)=>(<h1>{counterValue}</h1>)\n        )}\n        <button onClick={()=>yetAnotherCounter$.do.update(3)}>\n            setValueTo3\n        </button>\n        <button onClick={()=>yetAnotherCounter$.do.update(current=>++current)}>\n            increase by one\n        </button>\n        <button onClick={()=>yetAnotherCounter$.do.updateAsap(\n            Asaps.delayed(3, 3000)\n        )}>\n            setValueTo3 - asnyc\n        </button>\n        <button onClick={()=>yetAnotherCounter$.do.updateAsap(\n            Asaps.delayed(()=>yetAnotherCounter$.getData() + 1, 3000)\n        )}>\n            increase by one - async\n        </button>\n        <h1>\n        EVEN NUMBERS: {yetAnotherCounter$.filter(it=>it % 2 === 0).connectLive (\n            (counterValue)=>(<span>{counterValue}</span>)\n        )}\n        </h1>\n        <h1>\n            DOUBLE: {yetAnotherCounter$.map(it=>it * 2).connectLive (\n            (counterValue)=>(<span>{counterValue}</span>)\n        )}\n        </h1>\n    </div>)\n}\n"]},"metadata":{},"sourceType":"module"}