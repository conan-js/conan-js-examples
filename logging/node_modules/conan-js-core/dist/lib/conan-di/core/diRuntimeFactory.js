import { DiRuntime } from './diRuntime';
import { DiInvocationResolver } from './diInvocationResolver';
import { DiInvocationBuilderFactory, DiInvocationFactory } from './diInvocationBuilder';
import { DiAnnotationsMetadataFactory } from './annotations/diAnnotatinosMetadataFactory';
import { KeyValueCache } from "../../conan-utils/keyValueCache";
export class DiRuntimeFactory {
    static create(diReducer) {
        return new DiRuntime(DiRuntimeFactory.DI_INVOCATION_RESOLVER_PROVIDER(new KeyValueCache(), diReducer ? diReducer : null), DiRuntimeFactory.DI_INVOCATION_BUILDER_FACTORY);
    }
}
DiRuntimeFactory.DI_INVOCATION_BUILDER_FACTORY = new DiInvocationBuilderFactory(new DiAnnotationsMetadataFactory());
DiRuntimeFactory.cacheTBR = () => new KeyValueCache();
DiRuntimeFactory.DI_INVOCATION_RESOLVER_PROVIDER = (cache, diReducer) => new DiInvocationResolver(new DiInvocationFactory(DiRuntimeFactory.DI_INVOCATION_BUILDER_FACTORY), DiRuntimeFactory.cacheTBR(), diReducer);
//# sourceMappingURL=diRuntimeFactory.js.map