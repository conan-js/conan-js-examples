import { UserFlowDef } from "../def/flow/userFlowDef";
import { Mutators, VoidMutators } from "../domain/mutators";
import { FlowFacade } from "../domain/flowFacade";
import { Flow } from "../domain/flow";
import { FlowActionsDef } from "../domain/actions";
export declare class Flows {
    static create<USER_STATUSES, USER_MUTATORS extends Mutators<USER_STATUSES> = VoidMutators<USER_STATUSES>, ACTIONS = void>(flowDef: UserFlowDef<USER_STATUSES, USER_MUTATORS, ACTIONS>): FlowFacade<USER_STATUSES, USER_MUTATORS, ACTIONS>;
    static createFacade<USER_STATUSES, USER_MUTATORS extends Mutators<USER_STATUSES> = VoidMutators<USER_STATUSES>, ACTIONS = void>(flowController: Flow<USER_STATUSES, USER_MUTATORS>, actionsDef?: FlowActionsDef<USER_STATUSES, USER_MUTATORS, ACTIONS>): FlowFacade<USER_STATUSES, USER_MUTATORS, ACTIONS>;
    static createController<USER_STATUSES, USER_MUTATORS extends Mutators<USER_STATUSES> = VoidMutators<USER_STATUSES>>(flowDef: UserFlowDef<USER_STATUSES, USER_MUTATORS>): Flow<USER_STATUSES, USER_MUTATORS>;
}
