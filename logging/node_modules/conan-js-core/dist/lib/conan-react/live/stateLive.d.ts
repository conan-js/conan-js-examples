import * as React from "react";
import { ReactElement } from "react";
import { IBiFunction } from "../../index";
import { ConanState } from "../conanState";
import { ConnectedState } from "../connect/stateConnect";
export interface ContextStateLiveProps<STATE, ACTIONS = any> {
    renderer: IBiFunction<STATE, ACTIONS, ReactElement>;
    fallbackValue?: STATE;
}
export interface StateLiveProps<STATE, ACTIONS = any> {
    from: ConanState<STATE, ACTIONS>;
    renderer: IBiFunction<STATE, ACTIONS, ReactElement | ReactElement[]>;
    fallbackValue?: STATE;
}
export declare const ContextStateLive: <STATE, ACTIONS = any>(props: ContextStateLiveProps<STATE, ACTIONS>) => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
export declare const StateLive: <STATE, ACTIONS = any>(props: StateLiveProps<STATE, ACTIONS>) => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
export declare const contextStateLive: <STATE, ACTIONS = any>(renderer: IBiFunction<STATE, ACTIONS, React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)> | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>[]>, fallbackValue?: STATE) => React.ReactElement<ConnectedState<STATE, ACTIONS>, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
export declare const stateLive: <STATE, ACTIONS = any>(from: ConanState<STATE, ACTIONS>, renderer: IBiFunction<STATE, ACTIONS, React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)> | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>[]>, fallbackValue?: STATE) => React.ReactElement<ConnectedState<STATE, ACTIONS>, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
