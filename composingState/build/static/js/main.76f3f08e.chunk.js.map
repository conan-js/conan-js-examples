{"version":3,"sources":["components/lineComponents.tsx","app.tsx","index.tsx"],"names":["exampleBox","border","margin","padding","width","flexRows","BoxComponent","props","style","description","method1","method2","counterElement","LineComponent","boxes","desc","desc2","map","boxProps","i","key","ComposeStateApp","productQty$","Conan","state","name","reducers","getData","$decrementQty","qty","$incrementQty","initialData","id","productPrice$","$decrementPriceBy10","priceUsd","$incrementPriceBy10","productQty","connectLive","onClick","do","incrementQty","decrementQty","price","incrementPriceBy10","decrementPriceBy10","filter","merge","productPrice","total","tuple","ConanState","combine","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76f3f08e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {CSSProperties} from \"react\";\n\nconst exampleBox: CSSProperties = {\n    border: `2px solid black`,\n    margin: `5px`,\n    padding: `10px`,\n    width: `300px`,\n}\n\nconst flexRows: CSSProperties = {\n    \"display\": \"flex\",\n    \"flexDirection\": \"row\",\n    \"flexWrap\": \"wrap\",\n    \"justifyContent\": \"flex-start\",\n    \"alignItems\": \"stretch\",\n    \"alignContent\": \"stretch\",\n}\n\ninterface BoxProperties {\n    description: string,\n    method1: string,\n    method2: string,\n    counterElement: React.ReactElement,\n}\n\nconst BoxComponent = (props: BoxProperties): React.ReactElement => (\n    <div style={exampleBox}>\n        <span>{props.description}</span>\n        <ul>\n            <li><code>{props.method1}</code></li>\n            <li><code>{props.method2}</code></li>\n        </ul>\n\n        {props.counterElement}\n    </div>\n);\n\n\ninterface LineProperties {\n    desc?: string;\n    desc2?: string;\n    boxes: BoxProperties[];\n}\n\nexport const LineComponent = ({boxes, desc, desc2}: LineProperties): React.ReactElement<LineProperties> => (\n    <div>\n        {desc && <h3><b>{desc}</b></h3>}\n        {desc2 && <h4>{desc2}</h4>}\n        <div style={flexRows}>\n            {boxes.map((boxProps, i)=><BoxComponent {...boxProps} key={i}/>)}\n        </div>\n    </div>\n)\n","import * as React from \"react\";\nimport {Reducers} from \"conan-js-core\";\nimport {Conan} from \"conan-js-core\";\nimport {ConanState} from \"conan-js-core\";\nimport {LineComponent} from \"./components/lineComponents\";\n\nexport interface ProductQtyReducers extends Reducers<ProductQty>{\n    $incrementQty(): ProductQty;\n    $decrementQty(): ProductQty;\n}\nexport interface ProductQtyActions {\n    incrementQty(): void;\n    decrementQty(): void;\n}\n\ninterface CombinedObject {\n    qty: ProductQty,\n    price: ProductUnitPrice\n}\n\ninterface ProductQty {\n    qty: number;\n    id: string;\n}\n\nexport interface ProductPriceReducers extends Reducers<ProductUnitPrice>{\n    $incrementPriceBy10(): ProductUnitPrice;\n    $decrementPriceBy10(): ProductUnitPrice;\n}\nexport interface ProductPriceActions {\n    incrementPriceBy10(): void;\n    decrementPriceBy10(): void;\n}\n\ninterface ProductUnitPrice {\n    priceUsd: number;\n    id: string;\n}\n\n\nexport function ComposeStateApp(): React.ReactElement {\n    const productQty$ = Conan.state<ProductQty, ProductQtyReducers, ProductQtyActions>({\n        name: 'state$.pipeMap',\n        reducers: getData =>({\n            $decrementQty (): ProductQty{\n                return {...getData(), qty: getData().qty - 1};\n            },\n            $incrementQty (): ProductQty{\n                return {...getData(), qty: getData().qty + 1};\n            }\n        }),\n        initialData: {\n            qty: 1,\n            id: 'a'\n        }\n    }\n    );\n\n\n    const productPrice$ = Conan.state<ProductUnitPrice, ProductPriceReducers, ProductPriceActions>({\n            name: 'state$.pipeMap',\n            reducers: getData =>({\n                $decrementPriceBy10 (): ProductUnitPrice{\n                    return {...getData(), priceUsd: getData().priceUsd - 10};\n                },\n                $incrementPriceBy10 (): ProductUnitPrice{\n                    return {...getData(), priceUsd: getData().priceUsd + 10};\n                }\n            }),\n            initialData: {\n                priceUsd: 5,\n                id: 'a'\n            }\n        }\n    );\n\n    return (<div>\n        <h1>1 state</h1>\n        <LineComponent\n            desc={`[Pipe.map] 1 state => 1 state`}\n            boxes={[{\n                description: `[productQty$.mapPipe] => qty$`,\n                method1: `pipeMap((data)=>data.aNumber)`,\n                method2: `[...].do.incrementNumber() / [...].do.decrementNumber()`,\n                counterElement: productQty$.map((productQty)=>productQty.qty).connectLive(\n                    (qty) => (<div>\n                        <button onClick={() => productQty$.do.incrementQty()}>Increment!</button>\n                        <button onClick={() => productQty$.do.decrementQty()}>Decrement!</button>\n                        <h1>quantity: {qty}</h1>\n                    </div>)\n                )\n            },{\n                description: `[productPrice$.mapPipe] => price$`,\n                method1: `pipeMap((data)=>data.aNumber)`,\n                method2: `[...].do.incrementNumber() / [...].do.decrementNumber()`,\n                counterElement: productPrice$.map((price)=>price.priceUsd).connectLive(\n                    (priceUsd) => (<div>\n                        <button onClick={() => productPrice$.do.incrementPriceBy10()}>Increment!</button>\n                        <button onClick={() => productPrice$.do.decrementPriceBy10()}>Decrement!</button>\n                        <h1>price ($): {priceUsd}</h1>\n                    </div>)\n                )\n            }]\n        }/>\n\n        <LineComponent\n            desc={`[Pipe.filter] 1 state => 1 state`}\n            boxes={[{\n                description: `[productQty$.filter] => productQty.qty % 2 === 0`,\n                method1: `productQty$.filter`,\n                method2: `[...].do.incrementNumber() / [...].do.decrementNumber()`,\n                counterElement: productQty$.filter((productQty) => productQty.qty % 2 === 0).connectLive(\n                    (productQty) => (<div>\n                        <button onClick={() => productQty$.do.incrementQty()}>Increment!</button>\n                        <button onClick={() => productQty$.do.decrementQty()}>Decrement!</button>\n                        <h1>EVEN quantity: {productQty ? productQty.qty : '-'}</h1>\n                    </div>)\n                )\n            },{\n                description: `[productQty$.filter] => productQty.qty % 2 !== 0`,\n                method1: `productQty$.filter`,\n                method2: `[...].do.incrementNumber() / [...].do.decrementNumber()`,\n                counterElement: productQty$.filter((productQty)=>productQty.qty % 2 !== 0).connectLive(\n                    (productQty) => (<div>\n                        <button onClick={() => productQty$.do.incrementQty()}>Increment!</button>\n                        <button onClick={() => productQty$.do.decrementQty()}>Decrement!</button>\n                        <h1>ODD quantity: {productQty ? productQty.qty : '-'}</h1>\n                    </div>)\n                )\n            }]\n            }/>\n\n\n        <h1>2 states</h1>\n        <LineComponent\n            desc={`[Pipe.merge] 2 state => 1 state`}\n            boxes={[{\n                description: `state$.pipeMerge`,\n                method1: `productQty$.pipeMerge(productPrice$, (productQty, productPrice)=>[...])`,\n                method2: `[...].do.incrementNumber() / [...].do.decrementNumber()`,\n                counterElement: productQty$.merge<number, ProductUnitPrice>(\n                    productPrice$,\n                    (productQty, productPrice)=>productQty && productPrice ? productQty.qty * productPrice.priceUsd : 0\n                ).connectLive(\n                    (total) => (<div>\n                        <button onClick={() => productQty$.do.incrementQty()}>Increment qty!</button>\n                        <button onClick={() => productQty$.do.decrementQty()}>Decrement qty!</button>\n                        <button onClick={() => productPrice$.do.incrementPriceBy10()}>Increment price!</button>\n                        <button onClick={() => productPrice$.do.decrementPriceBy10()}>Decrement price!</button>\n                        <h1>total ($): {total}</h1>\n                    </div>)\n                )\n            },{\n                description: `state$.pipeTuple`,\n                method1: `productQty$.pipeTuple(productPrice$)`,\n                method2: `[...].do.incrementNumber() / [...].do.decrementNumber()`,\n                counterElement: productQty$.tuple<ProductUnitPrice>(\n                    productPrice$,\n                ).connectLive(\n                    ([qty, price]) => (<div>\n                        <button onClick={() => productQty$.do.incrementQty()}>Increment qty!</button>\n                        <button onClick={() => productQty$.do.decrementQty()}>Decrement qty!</button>\n                        <button onClick={() => productPrice$.do.incrementPriceBy10()}>Increment price!</button>\n                        <button onClick={() => productPrice$.do.decrementPriceBy10()}>Decrement price!</button>\n                        <h1>total ($): {qty.qty} * {price.priceUsd} = {qty.qty * price.priceUsd}</h1>\n                    </div>)\n                )\n            }]\n        }/>\n\n        <h1>Many states</h1>\n        <LineComponent\n            desc={`[ConanState.combine] * state => 1 state`}\n            boxes={[{\n                description: `ConanState.combine`,\n                method1: `{ price: productPrice$, qty: productQty$ }`,\n                method2: ``,\n                counterElement: ConanState.combine<CombinedObject>(\n                    `combine`,\n                    {\n                        price: productPrice$,\n                        qty: productQty$\n                    }\n                ).connectLive(\n                    ({qty, price}) => (<div>\n                        <button onClick={() => productQty$.do.incrementQty()}>Increment qty!</button>\n                        <button onClick={() => productQty$.do.decrementQty()}>Decrement qty!</button>\n                        <button onClick={() => productPrice$.do.incrementPriceBy10()}>Increment price!</button>\n                        <button onClick={() => productPrice$.do.decrementPriceBy10()}>Decrement price!</button>\n                        <h1>total ($): {qty.qty} * {price.priceUsd} = {qty.qty * price.priceUsd}</h1>\n                    </div>)\n                )\n\n            },]\n            }/>\n\n\n\n    </div>)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ComposeStateApp} from \"./app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <ComposeStateApp/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}