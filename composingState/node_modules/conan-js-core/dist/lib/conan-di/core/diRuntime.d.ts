import { DiInvocationResolver } from './diInvocationResolver';
import { DiInvocationBuilderFactory } from './diInvocationBuilder';
import { Injectable, Runtime } from './diDomain';
import { IKeyValuePairs, IVarArgConstructor } from "../../conan-utils/typesHelper";
export declare class DiRuntime implements Runtime {
    private readonly diInvocationResolver;
    private readonly diInvocationBuilderFactory;
    static readonly PROPS_PROPERTY_NAME = "$props";
    constructor(diInvocationResolver: DiInvocationResolver, diInvocationBuilderFactory: DiInvocationBuilderFactory);
    invoke<T>(from: Injectable<T>, transitiveBeans: IKeyValuePairs<any>, context: IKeyValuePairs<Injectable<any>>): T;
    invokeWithProps<T, P>(from: IVarArgConstructor<T>, props: P, transitiveBeans: IKeyValuePairs<any>, context: IKeyValuePairs<Injectable<any>>): T;
}
