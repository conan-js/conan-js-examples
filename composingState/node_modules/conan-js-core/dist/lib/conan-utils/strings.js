export class Strings {
    static firstCharToLowerCase(from) {
        return from.substring(0, 1).toLowerCase() + from.substring(1, from.length);
    }
    static firstCharToUpperCase(from) {
        return from.substring(0, 1).toUpperCase() + from.substring(1, from.length);
    }
    static camelCaseWithPrefix(prefix, from) {
        return prefix + this.firstCharToUpperCase(from);
    }
    static repeat(s, repeats) {
        let result = '';
        for (let i = 0; i < repeats; i++) {
            result += s;
        }
        return result;
    }
    static padEnd(s, positions) {
        if (s == null)
            return s;
        let toAdd = positions - s.length;
        if (toAdd < 1) {
            let middle = '...';
            let toRemove = s.length + middle.length - positions;
            let leftInsertionPoint = 1;
            let rightInsertionPoint = leftInsertionPoint + toRemove;
            return s.substring(0, leftInsertionPoint) + middle + s.substring(rightInsertionPoint, s.length);
        }
        else {
            return s + " ".repeat(toAdd);
        }
    }
}
//# sourceMappingURL=strings.js.map