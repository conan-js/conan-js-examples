{"ast":null,"code":"import*as React from\"react\";import{useEffect}from\"react\";import{IssuesList}from\"../../components/IssuesList\";import{diContext}from\"../../context\";import{IssuesPageHeader}from\"./IssuesPageHeader\";import{repoDetailsState$}from\"../../state/repoDetailsState$\";export var IssuesListPage=function IssuesListPage(_ref){var org=_ref.org,repo=_ref.repo,_ref$page=_ref.page,page=_ref$page===void 0?1:_ref$page,fetchIssues=_ref.fetchIssues,fetchRepoDetails=_ref.fetchRepoDetails;useEffect(function(){fetchIssues(org,repo,page);fetchRepoDetails(org,repo);},[org,repo,page]);return/*#__PURE__*/React.createElement(\"div\",{id:\"issue-list-page\"},repoDetailsState$.connectMap(IssuesPageHeader,function(data){return{org:org,repo:repo,openIssuesCount:data.openIssuesCount};}),diContext.issuesState.connect(IssuesList));};","map":{"version":3,"sources":["/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/src/features/issuesList/IssuesListPage.tsx"],"names":["React","useEffect","IssuesList","diContext","IssuesPageHeader","repoDetailsState$","IssuesListPage","org","repo","page","fetchIssues","fetchRepoDetails","connectMap","data","openIssuesCount","issuesState","connect"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CAGA,OAAQC,UAAR,KAAyB,6BAAzB,CACA,OAAQC,SAAR,KAAwB,eAAxB,CACA,OAAqBC,gBAArB,KAA4C,oBAA5C,CACA,OAAQC,iBAAR,KAAgC,+BAAhC,CAcA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAMuC,IALlCC,CAAAA,GAKkC,MALlCA,GAKkC,CAJlCC,IAIkC,MAJlCA,IAIkC,gBAHlCC,IAGkC,CAHlCA,IAGkC,oBAH3B,CAG2B,WAFlCC,WAEkC,MAFlCA,WAEkC,CADlCC,gBACkC,MADlCA,gBACkC,CAEjEV,SAAS,CAAC,UAAM,CACZS,WAAW,CAACH,GAAD,CAAMC,IAAN,CAAYC,IAAZ,CAAX,CACAE,gBAAgB,CAACJ,GAAD,CAAMC,IAAN,CAAhB,CACH,CAHQ,CAGN,CAACD,GAAD,CAAMC,IAAN,CAAYC,IAAZ,CAHM,CAAT,CAKA,mBACI,2BAAK,EAAE,CAAC,iBAAR,EACKJ,iBAAiB,CAACO,UAAlB,CACGR,gBADH,CAEG,SAAAS,IAAI,QAAK,CACLN,GAAG,CAAEA,GADA,CAELC,IAAI,CAAEA,IAFD,CAGLM,eAAe,CAAED,IAAI,CAACC,eAHjB,CAAL,EAFP,CADL,CAUKX,SAAS,CAACY,WAAV,CAAsBC,OAAtB,CAA8Bd,UAA9B,CAVL,CADJ,CAcH,CA3BM","sourcesContent":["import * as React from \"react\";\nimport {useEffect} from \"react\";\nimport {IBiConsumer, ITriConsumer} from \"conan-js-core\";\nimport {Issue} from \"../../api/gitHub\";\nimport {IssuesList} from \"../../components/IssuesList\";\nimport {diContext} from \"../../context\";\nimport {HeaderProps, IssuesPageHeader} from \"./IssuesPageHeader\";\nimport {repoDetailsState$} from \"../../state/repoDetailsState$\";\n\nexport interface ILPageProps {\n    org: string\n    repo: string\n    page: number\n}\n\nexport interface ILPageStateProps {\n    fetchIssues: ITriConsumer<string, string, number>;\n    issues: Issue[];\n    fetchRepoDetails: IBiConsumer<string, string>;\n}\n\nexport const IssuesListPage = ({\n                                   org,\n                                   repo,\n                                   page = 1,\n                                   fetchIssues,\n                                   fetchRepoDetails,\n                               }: ILPageProps & ILPageStateProps) => {\n\n    useEffect(() => {\n        fetchIssues(org, repo, page);\n        fetchRepoDetails(org, repo);\n    }, [org, repo, page]);\n\n    return (\n        <div id=\"issue-list-page\">\n            {repoDetailsState$.connectMap<HeaderProps>(\n                IssuesPageHeader,\n                data => ({\n                    org: org,\n                    repo: repo,\n                    openIssuesCount: data.openIssuesCount\n                })\n            )\n            }\n            {diContext.issuesState.connect(IssuesList)}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}