{"ast":null,"code":"import*as React from\"react\";import{UserWithAvatar}from\"../../components/UserWithAvatar\";function IssueCommentDisplay(_ref){var comment=_ref.comment;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(UserWithAvatar,{user:comment.user,orientation:\"horizontal\"}),/*#__PURE__*/React.createElement(\"div\",null,comment.body));}export function IssueComments(_ref2){var _ref2$comments=_ref2.comments,comments=_ref2$comments===void 0?[]:_ref2$comments,issue=_ref2.issue;// The issue has no comments\nif(issue.comments===0){return/*#__PURE__*/React.createElement(\"div\",{className:\"issue-detail--no-comments\"},\"No comments\");}// The issue has comments, but they're not loaded yet\nif(!comments||comments.length===0){return/*#__PURE__*/React.createElement(\"div\",{className:\"issue-detail--comments-loading\"},\"Comments loading...\");}// Comments are loaded\nreturn/*#__PURE__*/React.createElement(\"ul\",null,comments.map(function(comment){return/*#__PURE__*/React.createElement(\"li\",{key:comment.id},/*#__PURE__*/React.createElement(IssueCommentDisplay,{comment:comment}));}));}","map":{"version":3,"sources":["/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/src/features/issueDetails/IssueComments.tsx"],"names":["React","UserWithAvatar","IssueCommentDisplay","comment","user","body","IssueComments","comments","issue","length","map","id"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,OAAQC,cAAR,KAA6B,iCAA7B,CAYA,QAASC,CAAAA,mBAAT,MAAiD,IAAnBC,CAAAA,OAAmB,MAAnBA,OAAmB,CAC7C,mBACI,4CACI,oBAAC,cAAD,EACI,IAAI,CAAEA,OAAO,CAACC,IADlB,CAEI,WAAW,CAAC,YAFhB,EADJ,cAMI,+BACKD,OAAO,CAACE,IADb,CANJ,CADJ,CAYH,CAED,MAAO,SAASC,CAAAA,aAAT,OAAyD,0BAAjCC,QAAiC,CAAjCA,QAAiC,yBAAtB,EAAsB,gBAAlBC,KAAkB,OAAlBA,KAAkB,CAC9D;AACA,GAAIA,KAAK,CAACD,QAAN,GAAmB,CAAvB,CAA0B,CACxB,mBAAO,2BAAK,SAAS,CAAC,2BAAf,gBAAP,CACD,CAED;AACA,GAAI,CAACA,QAAD,EAAaA,QAAQ,CAACE,MAAT,GAAoB,CAArC,CAAwC,CACtC,mBACI,2BAAK,SAAS,CAAC,gCAAf,wBADJ,CAGD,CAED;AACA,mBACI,8BACKF,QAAQ,CAACG,GAAT,CAAa,SAAAP,OAAO,qBACjB,0BAAI,GAAG,CAAEA,OAAO,CAACQ,EAAjB,eACI,oBAAC,mBAAD,EAAqB,OAAO,CAAER,OAA9B,EADJ,CADiB,EAApB,CADL,CADJ,CASD","sourcesContent":["import * as React from \"react\";\nimport {Issue, IssueComment} from \"../../api/gitHub\";\nimport {UserWithAvatar} from \"../../components/UserWithAvatar\";\n\n\ninterface ICLProps {\n    issue: Issue\n    comments: IssueComment[]\n}\n\ninterface ICProps {\n    comment: IssueComment\n}\n\nfunction IssueCommentDisplay({comment}: ICProps) {\n    return (\n        <div>\n            <UserWithAvatar\n                user={comment.user}\n                orientation=\"horizontal\"\n            />\n\n            <div>\n                {comment.body}\n            </div>\n      </div>\n  )\n}\n\nexport function IssueComments({comments = [], issue}: ICLProps) {\n  // The issue has no comments\n  if (issue.comments === 0) {\n    return <div className=\"issue-detail--no-comments\">No comments</div>\n  }\n\n  // The issue has comments, but they're not loaded yet\n  if (!comments || comments.length === 0) {\n    return (\n        <div className=\"issue-detail--comments-loading\">Comments loading...</div>\n    )\n  }\n\n  // Comments are loaded\n  return (\n      <ul>\n          {comments.map(comment => (\n              <li key={comment.id}>\n                  <IssueCommentDisplay comment={comment}/>\n              </li>\n          ))}\n      </ul>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}