{"ast":null,"code":"import{diContext}from\"../context\";export var issueCommentsActionsFn=function issueCommentsActionsFn(thread){return{fetchComments:function fetchComments(issue){return thread.monitor(diContext.issuesService.fetchComments(issue.comments_url).catch(function(){return thread.reducers.$fetch([]);}),function(comments,reducers){return reducers.$fetchComments(issue.id,comments);},'fetchComments',issue.comments_url);}};};","map":{"version":3,"sources":["/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/src/state/issueCommentsActionsFn.ts"],"names":["diContext","issueCommentsActionsFn","thread","fetchComments","issue","monitor","issuesService","comments_url","catch","reducers","$fetch","comments","$fetchComments","id"],"mappings":"AAAA,OAAQA,SAAR,KAAwB,YAAxB,CAWA,MAAO,IAAMC,CAAAA,sBAAsG,CAAG,QAAzGA,CAAAA,sBAAyG,CAAAC,MAAM,QAAK,CAC7HC,aAD6H,wBAC/GC,KAD+G,CACvE,CAClD,MAAOF,CAAAA,MAAM,CAACG,OAAP,CACHL,SAAS,CAACM,aAAV,CAAwBH,aAAxB,CAAsCC,KAAK,CAACG,YAA5C,EAA0DC,KAA1D,CAAgE,iBAAMN,CAAAA,MAAM,CAACO,QAAP,CAAgBC,MAAhB,CAAuB,EAAvB,CAAN,EAAhE,CADG,CAEH,SAACC,QAAD,CAAWF,QAAX,QAAwBA,CAAAA,QAAQ,CAACG,cAAT,CAAwBR,KAAK,CAACS,EAA9B,CAAkCF,QAAlC,CAAxB,EAFG,CAGH,eAHG,CAIHP,KAAK,CAACG,YAJH,CAAP,CAMH,CAR4H,CAAL,EAArH","sourcesContent":["import {diContext} from \"../context\";\nimport {Asap} from \"conan-js-core\";\nimport {IssuesCommentsData} from \"./issuesCommentState$\";\nimport {IssuesCommentsReducersFn} from \"./issuesCommentsReducersFn\";\nimport {Issue, IssueComment} from \"../api/gitHub\";\nimport {ActionsFn} from \"conan-js-core\";\n\nexport interface IssuesCommentsActions {\n    fetchComments(issue: Issue): Asap<IssuesCommentsData>;\n}\n\nexport const issueCommentsActionsFn: ActionsFn<IssuesCommentsData, IssuesCommentsReducersFn, IssuesCommentsActions> = thread => ({\n    fetchComments(issue: Issue): Asap<IssuesCommentsData> {\n        return thread.monitor(\n            diContext.issuesService.fetchComments(issue.comments_url).catch(() => thread.reducers.$fetch([])),\n            (comments, reducers) => reducers.$fetchComments(issue.id, comments as IssueComment[]),\n            'fetchComments',\n            issue.comments_url\n        )\n    }\n})\n"]},"metadata":{},"sourceType":"module"}