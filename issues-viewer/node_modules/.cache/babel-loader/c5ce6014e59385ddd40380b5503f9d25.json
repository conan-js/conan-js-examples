{"ast":null,"code":"import _objectSpread from\"/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from\"react\";import{RepoSearchForm}from\"./components/RepoSearchForm\";import{IssuesListPage}from\"./features/issuesList/IssuesListPage\";import{diContext}from\"./context\";import{IssueDetailsPage}from\"./features/issueDetails/IssueDetailsPage\";import{useConanState}from\"conan-js-core\";import{repoState$}from\"./state/repoState$\";import{Grid,ThemeProvider}from\"@material-ui/core\";import{theme}from\"./styles/styles\";export var IssuesViewerApp=function IssuesViewerApp(){return diContext.issuesState.connectData(IssuesViewer);};export var IssuesViewer=function IssuesViewer(_ref){var displayType=_ref.displayType,issuesByNumber=_ref.issuesByNumber,issueId=_ref.issueId,issues=_ref.issues;var _useConanState=useConanState(repoState$),_useConanState2=_slicedToArray(_useConanState,1),repoData=_useConanState2[0];var setOrgAndRepo=function setOrgAndRepo(org,repo){diContext.repoState.do.update(function(current){return _objectSpread(_objectSpread({},current),{},{org:org,repo:repo});});};var setJumpToPage=function setJumpToPage(page){diContext.repoState.do.update(function(current){return _objectSpread(_objectSpread({},current),{},{page:page});});};var content;if(displayType==='issues'){content=/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1,direction:\"column\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,lg:4},/*#__PURE__*/React.createElement(RepoSearchForm,{org:repoData.org,repo:repoData.repo,page:repoData.page,setOrgAndRepo:setOrgAndRepo,setJumpToPage:setJumpToPage})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,lg:4},/*#__PURE__*/React.createElement(IssuesListPage,{org:repoData.org,repo:repoData.repo,page:repoData.page,fetchIssues:diContext.issuesState.do.fetch,fetchRepoDetails:diContext.repoDetailsState.do.fetchRepoDetails,issues:issues})));}else{content=/*#__PURE__*/React.createElement(IssueDetailsPage,{issue:issuesByNumber[issueId],org:repoData.org,repo:repoData.repo,showIssuesList:diContext.issuesState.do.showIssues,fetchComments:diContext.issuesCommentsState.do.fetchComments});}return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(ThemeProvider,{theme:theme},content));};export default IssuesViewer;","map":{"version":3,"sources":["/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/src/app.tsx"],"names":["React","RepoSearchForm","IssuesListPage","diContext","IssueDetailsPage","useConanState","repoState$","Grid","ThemeProvider","theme","IssuesViewerApp","issuesState","connectData","IssuesViewer","displayType","issuesByNumber","issueId","issues","repoData","setOrgAndRepo","org","repo","repoState","do","update","current","setJumpToPage","page","content","fetch","repoDetailsState","fetchRepoDetails","showIssues","issuesCommentsState","fetchComments"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {RepoSearchForm} from \"./components/RepoSearchForm\";\nimport {IssuesListPage} from \"./features/issuesList/IssuesListPage\";\nimport {diContext} from \"./context\";\nimport {IssueDetailsPage} from \"./features/issueDetails/IssueDetailsPage\";\nimport {IssuesData} from \"./state/issuesState$\";\nimport {useConanState} from \"conan-js-core\";\nimport {RepoData, repoState$} from \"./state/repoState$\";\nimport {Grid, ThemeProvider} from \"@material-ui/core\";\nimport {theme} from \"./styles/styles\";\n\nexport type IssuesViewerProps = IssuesData\n\nexport const IssuesViewerApp: React.FC = (): React.ReactElement => {\n    return diContext.issuesState.connectData(\n        IssuesViewer\n    )\n}\n\nexport const IssuesViewer: React.FC<IssuesViewerProps> = ({displayType, issuesByNumber, issueId, issues}: IssuesData) => {\n\n    const [repoData] = useConanState<RepoData>(repoState$);\n\n    const setOrgAndRepo = (org: string, repo: string) => {\n        diContext.repoState.do.update(current => ({...current, org: org, repo: repo}));\n    }\n\n    const setJumpToPage = (page: number) => {\n        diContext.repoState.do.update(current => ({...current, page: page}));\n    }\n\n    let content\n\n    if (displayType === 'issues') {\n        content = (\n            <Grid container spacing={1} direction={\"column\"}>\n                <Grid item xs={12} lg={4}>\n                    <RepoSearchForm\n                        org={repoData.org}\n                        repo={repoData.repo}\n                        page={repoData.page}\n                        setOrgAndRepo={setOrgAndRepo}\n                        setJumpToPage={setJumpToPage}\n                    />\n                </Grid>\n                <Grid item xs={12} lg={4}>\n                    <IssuesListPage\n                        org={repoData.org}\n                        repo={repoData.repo}\n                        page={repoData.page}\n                        fetchIssues={diContext.issuesState.do.fetch}\n                        fetchRepoDetails={diContext.repoDetailsState.do.fetchRepoDetails}\n                        issues={issues}\n                    />\n                </Grid>\n            </Grid>\n        )\n    } else {\n        content = <IssueDetailsPage\n            issue={issuesByNumber[issueId]}\n            org={repoData.org}\n            repo={repoData.repo}\n            showIssuesList={diContext.issuesState.do.showIssues}\n            fetchComments={diContext.issuesCommentsState.do.fetchComments}\n        />;\n    }\n\n    return <div className=\"App\"><ThemeProvider theme={theme}>{content}</ThemeProvider></div>\n}\n\nexport default IssuesViewer\n"]},"metadata":{},"sourceType":"module"}