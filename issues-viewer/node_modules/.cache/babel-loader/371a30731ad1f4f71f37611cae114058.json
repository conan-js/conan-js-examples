{"ast":null,"code":"import*as React from\"react\";import{Avatar,Divider,Grid,List,ListItem,Typography}from\"@material-ui/core\";function IssueCommentDisplay(_ref){var comment=_ref.comment;return/*#__PURE__*/React.createElement(Grid,{item:true,container:true,direction:\"column\",spacing:1,justify:\"space-around\"},/*#__PURE__*/React.createElement(Grid,{item:true,container:true,xs:4,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:1},/*#__PURE__*/React.createElement(Avatar,{src:comment.user.avatar_url})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:1},/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\"},comment.user.login))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:10},/*#__PURE__*/React.createElement(Typography,{color:\"textPrimary\"},comment.body)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Divider,{light:true})));}export function IssueComments(_ref2){var _ref2$comments=_ref2.comments,comments=_ref2$comments===void 0?[]:_ref2$comments,issue=_ref2.issue;// The issue has no comments\nif(issue.comments===0){return/*#__PURE__*/React.createElement(\"div\",{className:\"issue-detail--no-comments\"},\"No comments\");}// The issue has comments, but they're not loaded yet\nif(!comments||comments.length===0){return/*#__PURE__*/React.createElement(\"div\",{className:\"issue-detail--comments-loading\"},\"Comments loading...\");}// Comments are loaded\nreturn/*#__PURE__*/React.createElement(List,null,comments.map(function(comment){return/*#__PURE__*/React.createElement(ListItem,{key:comment.id},/*#__PURE__*/React.createElement(IssueCommentDisplay,{comment:comment}));}));}","map":{"version":3,"sources":["/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/src/features/issueDetails/IssueComments.tsx"],"names":["React","Avatar","Divider","Grid","List","ListItem","Typography","IssueCommentDisplay","comment","user","avatar_url","login","body","IssueComments","comments","issue","length","map","id"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,OAAQC,MAAR,CAAgBC,OAAhB,CAAyBC,IAAzB,CAA+BC,IAA/B,CAAqCC,QAArC,CAA+CC,UAA/C,KAAgE,mBAAhE,CAYA,QAASC,CAAAA,mBAAT,MAAiD,IAAnBC,CAAAA,OAAmB,MAAnBA,OAAmB,CAC7C,mBACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,SAAS,KAApB,CAAqB,SAAS,CAAE,QAAhC,CAA0C,OAAO,CAAE,CAAnD,CAAsD,OAAO,CAAE,cAA/D,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,SAAS,KAApB,CAAqB,EAAE,CAAE,CAAzB,CAA4B,OAAO,CAAE,CAArC,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACI,oBAAC,MAAD,EAAQ,GAAG,CAAEA,OAAO,CAACC,IAAR,CAAaC,UAA1B,EADJ,CADJ,cAII,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACI,oBAAC,UAAD,EAAY,KAAK,CAAE,eAAnB,EACKF,OAAO,CAACC,IAAR,CAAaE,KADlB,CADJ,CAJJ,CADJ,cAWI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EAXJ,cAYI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,UAAD,EAAY,KAAK,CAAE,aAAnB,EACKH,OAAO,CAACI,IADb,CADJ,CAZJ,cAiBI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,OAAD,EAAS,KAAK,KAAd,EADJ,CAjBJ,CADJ,CAuBH,CAED,MAAO,SAASC,CAAAA,aAAT,OAAyD,0BAAjCC,QAAiC,CAAjCA,QAAiC,yBAAtB,EAAsB,gBAAlBC,KAAkB,OAAlBA,KAAkB,CAC5D;AACA,GAAIA,KAAK,CAACD,QAAN,GAAmB,CAAvB,CAA0B,CACtB,mBAAO,2BAAK,SAAS,CAAC,2BAAf,gBAAP,CACH,CAED;AACA,GAAI,CAACA,QAAD,EAAaA,QAAQ,CAACE,MAAT,GAAoB,CAArC,CAAwC,CACpC,mBACI,2BAAK,SAAS,CAAC,gCAAf,wBADJ,CAGH,CAED;AACA,mBACI,oBAAC,IAAD,MACKF,QAAQ,CAACG,GAAT,CAAa,SAAAT,OAAO,qBACjB,oBAAC,QAAD,EAAU,GAAG,CAAEA,OAAO,CAACU,EAAvB,eACI,oBAAC,mBAAD,EAAqB,OAAO,CAAEV,OAA9B,EADJ,CADiB,EAApB,CADL,CADJ,CASH","sourcesContent":["import * as React from \"react\";\nimport {Issue, IssueComment} from \"../../api/gitHub\";\nimport {Avatar, Divider, Grid, List, ListItem, Typography} from \"@material-ui/core\";\n\n\ninterface ICLProps {\n    issue: Issue\n    comments: IssueComment[]\n}\n\ninterface ICProps {\n    comment: IssueComment\n}\n\nfunction IssueCommentDisplay({comment}: ICProps) {\n    return (\n        <Grid item container direction={\"column\"} spacing={1} justify={\"space-around\"}>\n            <Grid item container xs={4} spacing={1}>\n                <Grid item xs={1}>\n                    <Avatar src={comment.user.avatar_url}/>\n                </Grid>\n                <Grid item xs={1}>\n                    <Typography color={\"textSecondary\"}>\n                        {comment.user.login}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}/>\n            <Grid item xs={10}>\n                <Typography color={\"textPrimary\"}>\n                    {comment.body}\n                </Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Divider light/>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport function IssueComments({comments = [], issue}: ICLProps) {\n    // The issue has no comments\n    if (issue.comments === 0) {\n        return <div className=\"issue-detail--no-comments\">No comments</div>\n    }\n\n    // The issue has comments, but they're not loaded yet\n    if (!comments || comments.length === 0) {\n        return (\n            <div className=\"issue-detail--comments-loading\">Comments loading...</div>\n        )\n    }\n\n    // Comments are loaded\n    return (\n        <List>\n            {comments.map(comment => (\n                <ListItem key={comment.id}>\n                    <IssueCommentDisplay comment={comment}/>\n                </ListItem>\n            ))}\n        </List>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}