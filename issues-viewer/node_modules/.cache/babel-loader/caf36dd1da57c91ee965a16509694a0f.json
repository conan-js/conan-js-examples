{"ast":null,"code":"import _slicedToArray from\"/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from\"react\";import{useEffect}from\"react\";import{IssueMeta}from'./IssueMeta';import{insertMentionLinks}from\"../../utils/stringUtils\";import{IssueLabels}from\"../../components/IssueLabels\";import{issuesCommentsState$}from\"../../state/issuesCommentState$\";import{IssueComments}from\"./IssueComments\";import{useConanState}from\"conan-js-core\";import{Button,Divider,Grid,Typography}from\"@material-ui/core\";import{Remarkable}from'remarkable';import{Markdown}from\"../../utils/markDown\";export var IssueDetailsPage=function IssueDetailsPage(_ref){var issue=_ref.issue,showIssuesList=_ref.showIssuesList,fetchComments=_ref.fetchComments;var _useConanState=useConanState(issuesCommentsState$),_useConanState2=_slicedToArray(_useConanState,1),commentsState=_useConanState2[0];useEffect(function(){if(issue){fetchComments(issue);}},[]);var backToIssueListButton=/*#__PURE__*/React.createElement(Button,{onClick:showIssuesList,variant:\"outlined\",color:\"secondary\"},\"Back to Issues List\");var md=new Remarkable();var comments=commentsState.commentsByIssue[issue.id];var renderedComments;if(comments){renderedComments=/*#__PURE__*/React.createElement(IssueComments,{issue:issue,comments:comments});}var content=/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",color:\"primary\"},issue.title)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},backToIssueListButton),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(IssueMeta,{issue:issue})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(IssueLabels,{labels:issue.labels})),/*#__PURE__*/React.createElement(Grid,{item:true,container:true,xs:12,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:1}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:11},/*#__PURE__*/React.createElement(Typography,{variant:\"body1\",color:\"primary\"},/*#__PURE__*/React.createElement(Markdown,{text:insertMentionLinks(issue.body)})))),/*#__PURE__*/React.createElement(Grid,{item:true,container:true,xs:12,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:1}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:10},/*#__PURE__*/React.createElement(Divider,{light:true})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:1})),/*#__PURE__*/React.createElement(Grid,{item:true,container:true,xs:12,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:2}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:10},renderedComments)));return/*#__PURE__*/React.createElement(\"div\",null,content);};","map":{"version":3,"sources":["/Users/albertoalmansa/Projects/conan-js/tmp/conan-js-examples/issues-viewer/src/features/issueDetails/IssueDetailsPage.tsx"],"names":["React","useEffect","IssueMeta","insertMentionLinks","IssueLabels","issuesCommentsState$","IssueComments","useConanState","Button","Divider","Grid","Typography","Remarkable","Markdown","IssueDetailsPage","issue","showIssuesList","fetchComments","commentsState","backToIssueListButton","md","comments","commentsByIssue","id","renderedComments","content","title","labels","body"],"mappings":"kMAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CACA,OAAQC,SAAR,KAAwB,aAAxB,CACA,OAAQC,kBAAR,KAAiC,yBAAjC,CAEA,OAAQC,WAAR,KAA0B,8BAA1B,CAEA,OAA4BC,oBAA5B,KAAuD,iCAAvD,CACA,OAAQC,aAAR,KAA4B,iBAA5B,CACA,OAAQC,aAAR,KAA4B,eAA5B,CAEA,OAAQC,MAAR,CAAgBC,OAAhB,CAAyBC,IAAzB,CAA+BC,UAA/B,KAAgD,mBAAhD,CACA,OAAQC,UAAR,KAAyB,YAAzB,CACA,OAAQC,QAAR,KAAuB,sBAAvB,CAgBA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAImB,IAHdC,CAAAA,KAGc,MAHdA,KAGc,CAFdC,cAEc,MAFdA,cAEc,CADdC,aACc,MADdA,aACc,oBAEvBV,aAAa,CAA4CF,oBAA5C,CAFU,kDAExCa,aAFwC,oBAI/CjB,SAAS,CAAC,UAAM,CACZ,GAAIc,KAAJ,CAAW,CACPE,aAAa,CAACF,KAAD,CAAb,CACH,CACJ,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMI,CAAAA,qBAAqB,cACvB,oBAAC,MAAD,EAAQ,OAAO,CAAEH,cAAjB,CAAiC,OAAO,CAAE,UAA1C,CAAsD,KAAK,CAAE,WAA7D,wBADJ,CAMA,GAAMI,CAAAA,EAAE,CAAG,GAAIR,CAAAA,UAAJ,EAAX,CACA,GAAMS,CAAAA,QAAQ,CAAGH,aAAa,CAACI,eAAd,CAA8BP,KAAK,CAACQ,EAApC,CAAjB,CACA,GAAIC,CAAAA,gBAAJ,CACA,GAAIH,QAAJ,CAAc,CACVG,gBAAgB,cAAG,oBAAC,aAAD,EAAe,KAAK,CAAET,KAAtB,CAA6B,QAAQ,CAAEM,QAAvC,EAAnB,CACH,CAED,GAAII,CAAAA,OAAO,cACP,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,UAAD,EAAY,OAAO,CAAE,IAArB,CAA2B,KAAK,CAAE,SAAlC,EAA8CV,KAAK,CAACW,KAApD,CADJ,CADJ,cAII,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACKP,qBADL,CAJJ,cAOI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,SAAD,EAAW,KAAK,CAAEJ,KAAlB,EADJ,CAPJ,cAUI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,WAAD,EAAa,MAAM,CAAEA,KAAK,CAACY,MAA3B,EADJ,CAVJ,cAaI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,SAAS,KAApB,CAAqB,EAAE,CAAE,EAAzB,CAA6B,OAAO,CAAE,CAAtC,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EADJ,cAEI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,UAAD,EAAY,OAAO,CAAE,OAArB,CAA8B,KAAK,CAAE,SAArC,eACI,oBAAC,QAAD,EAAU,IAAI,CAAExB,kBAAkB,CAACY,KAAK,CAACa,IAAP,CAAlC,EADJ,CADJ,CAFJ,CAbJ,cAqBI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,SAAS,KAApB,CAAqB,EAAE,CAAE,EAAzB,CAA6B,OAAO,CAAE,CAAtC,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EADJ,cAEI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,OAAD,EAAS,KAAK,KAAd,EADJ,CAFJ,cAKI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EALJ,CArBJ,cA4BI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,SAAS,KAApB,CAAqB,EAAE,CAAE,EAAzB,CAA6B,OAAO,CAAE,CAAtC,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EADJ,cAEI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACKJ,gBADL,CAFJ,CA5BJ,CADJ,CAqCA,mBAAO,+BAAMC,OAAN,CAAP,CAEH,CAlEM","sourcesContent":["import * as React from \"react\";\nimport {useEffect} from \"react\";\nimport {IssueMeta} from './IssueMeta'\nimport {insertMentionLinks} from \"../../utils/stringUtils\";\nimport {Issue} from \"../../api/gitHub\";\nimport {IssueLabels} from \"../../components/IssueLabels\";\nimport {IFunction} from \"conan-js-core\";\nimport {IssuesCommentsData, issuesCommentsState$} from \"../../state/issuesCommentState$\";\nimport {IssueComments} from \"./IssueComments\";\nimport {useConanState} from \"conan-js-core\";\nimport {IssuesCommentsActions} from \"../../state/issueCommentsActionsFn\";\nimport {Button, Divider, Grid, Typography} from \"@material-ui/core\";\nimport {Remarkable} from 'remarkable';\nimport {Markdown} from \"../../utils/markDown\";\n\n\nexport interface IDProps {\n    org: string;\n    repo: string;\n    issue: Issue;\n}\n\nexport interface IDStateProps {\n    showIssuesList: () => void;\n    fetchComments: IFunction<Issue, any>\n}\n\nexport type IDAllProps = IDProps & IDStateProps;\n\nexport const IssueDetailsPage = ({\n                                     issue,\n                                     showIssuesList,\n                                     fetchComments\n                                 }: IDAllProps) => {\n\n    const [commentsState] = useConanState<IssuesCommentsData, IssuesCommentsActions>(issuesCommentsState$);\n\n    useEffect(() => {\n        if (issue) {\n            fetchComments(issue)\n        }\n    }, []);\n\n    const backToIssueListButton = (\n        <Button onClick={showIssuesList} variant={\"outlined\"} color={\"secondary\"}>\n            Back to Issues List\n        </Button>\n    );\n\n    const md = new Remarkable();\n    const comments = commentsState.commentsByIssue[issue.id];\n    let renderedComments;\n    if (comments) {\n        renderedComments = <IssueComments issue={issue} comments={comments}/>\n    }\n\n    let content = (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <Typography variant={\"h3\"} color={\"primary\"}>{issue.title}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                {backToIssueListButton}\n            </Grid>\n            <Grid item xs={12}>\n                <IssueMeta issue={issue}/>\n            </Grid>\n            <Grid item xs={12}>\n                <IssueLabels labels={issue.labels}/>\n            </Grid>\n            <Grid item container xs={12} spacing={1}>\n                <Grid item xs={1}/>\n                <Grid item xs={11}>\n                    <Typography variant={\"body1\"} color={\"primary\"}>\n                        <Markdown text={insertMentionLinks(issue.body)}/>\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Grid item container xs={12} spacing={1}>\n                <Grid item xs={1} />\n                <Grid item xs={10}>\n                    <Divider light/>\n                </Grid>\n                <Grid item xs={1} />\n            </Grid>\n            <Grid item container xs={12} spacing={1}>\n                <Grid item xs={2}/>\n                <Grid item xs={10}>\n                    {renderedComments}\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n    return <div>{content}</div>\n\n}\n"]},"metadata":{},"sourceType":"module"}