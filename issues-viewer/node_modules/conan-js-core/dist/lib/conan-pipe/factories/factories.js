import { PipeMerge } from "../logic/pipeMerge";
import { PipeFilter } from "../logic/pipeFilter";
import { Objects } from "../../conan-utils/objects";
export class Pipes {
    static fromMonitor(monitor, baseValue, monitorMerger, dataMerger) {
        let pipeMerge = new PipeMerge(`pipeMonitorRaw[${monitor.getName()}]`, baseValue, monitor.mainThread, (data, monitorInfo, into) => dataMerger(data, into), monitor.asyncThread, (monitorInfo, data, into) => monitorMerger(monitorInfo, into));
        pipeMerge.start();
        return new PipeFilter(pipeMerge, (current, previous) => !Objects.deepEquals(current, previous), `pipeMonitor[${monitor.getName()}]`, baseValue).start();
    }
    static tupleCombine(left, right, baseValue, pipeThreadDef) {
        return new PipeMerge(`combineArray => [${left.getName()}, ${right.getName()}]`, baseValue, left, (left, right, into) => [left, into[1]], right, (right, left, into) => [into[0], right], pipeThreadDef).start();
    }
}
//# sourceMappingURL=factories.js.map