import { FlowEvent, FlowEventTiming, FlowEventLevel, FlowEventNature } from "../domain/flowRuntimeEvents";
import { IFunction } from "../..";
export declare class FlowLogger {
    private readonly filters;
    constructor(filters: IFunction<FlowEvent, boolean>[]);
    log(event: FlowEvent): boolean;
}
export declare class LoggerFilters {
    static logDebug(): IFunction<FlowEvent, boolean>;
    static excludeByLogName(nameToExclude: string): IFunction<FlowEvent, boolean>;
    static excludeByEventTiming(eventTiming: FlowEventTiming): IFunction<FlowEvent, boolean>;
    static excludeByEventLevel(eventLevel: FlowEventLevel): IFunction<FlowEvent, boolean>;
    static excludeByNature(nature: FlowEventNature): IFunction<FlowEvent, boolean>;
    static excludeByStatusName(name: string): IFunction<FlowEvent, boolean>;
}
export declare const FLOW_LOGGER: FlowLogger;
