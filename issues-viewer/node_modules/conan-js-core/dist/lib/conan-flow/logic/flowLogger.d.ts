import { FlowRuntimeEvent, FlowRuntimeEventTiming } from "../domain/flowRuntimeEvents";
import { IFunction } from "../..";
export interface LoggingOptions {
    highlight: boolean;
}
export declare class FlowLogger {
    private readonly filters;
    constructor(filters: IFunction<FlowRuntimeEvent, boolean>[]);
    log(event: FlowRuntimeEvent, loggingOptions: LoggingOptions): void;
}
export declare class LoggerFilters {
    static excludeByLogName(nameToExclude: string): IFunction<FlowRuntimeEvent, boolean>;
    static excludeByEventTiming(eventTiming: FlowRuntimeEventTiming): IFunction<FlowRuntimeEvent, boolean>;
}
export declare const FLOW_LOGGER: FlowLogger;
