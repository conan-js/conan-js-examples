import { FlowRuntimeEvent, FlowRuntimeEventSource, FlowRuntimeEventType } from "../domain/flowRuntimeEvents";
import { FlowRuntimeTracker } from "./flowRuntimeTracker";
import { IBiConsumer } from "../..";
import { LoggingOptions } from "./flowLogger";
import { FlowImpl } from "./flowImpl";
export declare class FlowOrchestrator {
    private readonly eventsProcessor;
    private pastTrackers;
    private currentTracker;
    constructor(eventsProcessor: IBiConsumer<FlowRuntimeEvent, LoggingOptions>[]);
    onRuntimeEvent(tracker: FlowRuntimeTracker, event: FlowRuntimeEvent, loggingOptions: LoggingOptions): void;
    createRuntimeTracker(flowController: FlowImpl<any, any>, source: FlowRuntimeEventSource, runtimeEvent: FlowRuntimeEventType, payload?: any): FlowRuntimeTracker;
}
