import { MetaStatus } from "./metaInfo";
import { FlowEventTiming } from "../../conan-flow/domain/flowRuntimeEvents";
export class MetaMutatorsFactory {
    static createTransitions(getStatus, statusName) {
        return {
            toIdle() {
                let transactionCount = getStatus().transactionCount;
                return {
                    name: transactionCount === 0 ? "idle" : "idleOnTransaction",
                    data: {
                        status: transactionCount === 0 ? MetaStatus.IDLE : MetaStatus.IDLE_ON_TRANSACTION,
                        transactionCount: transactionCount,
                        lastError: getStatus().lastError
                    }
                };
            },
            toInit() {
                return {
                    name: "init",
                    data: {
                        status: MetaStatus.INIT,
                        transactionCount: getStatus().transactionCount,
                        lastError: getStatus().lastError
                    }
                };
            },
            toRunning() {
                return {
                    name: "running",
                    data: {
                        status: MetaStatus.RUNNING,
                        transactionCount: getStatus().transactionCount,
                        lastError: getStatus().lastError
                    }
                };
            },
            toError(error) {
                return {
                    name: "error",
                    data: {
                        status: MetaStatus.ERROR,
                        transactionCount: getStatus().transactionCount,
                        lastError: error
                    }
                };
            }
        };
    }
    static createSteps(getState) {
        return ({
            $onTransaction(timing) {
                let metaInfo = getState();
                return {
                    status: metaInfo.status,
                    transactionCount: timing === FlowEventTiming.START ? ++metaInfo.transactionCount : --metaInfo.transactionCount,
                    lastError: metaInfo.lastError
                };
            },
        });
    }
}
//# sourceMappingURL=metaFlow.js.map