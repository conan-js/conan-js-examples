import { FlowFacade } from "../conan-flow/domain/flowFacade";
import { Mutators, VoidMutators } from "../conan-flow/domain/mutators";
import { StatusDef } from "../conan-flow/def/status/statusDef";
import { ConanState, IConsumer } from "../index";
import { Status, StatusLike } from "../conan-flow/domain/status";
import { ReactionCb } from "../conan-flow/def/reactionDef";
export declare class ConanFlow<USER_STATUSES, USER_MUTATORS extends Mutators<USER_STATUSES> = VoidMutators<USER_STATUSES>, ACTIONS = void> {
    private readonly flow;
    constructor(flow: FlowFacade<USER_STATUSES, USER_MUTATORS, ACTIONS>);
    on<STATUS extends keyof USER_STATUSES>(statusName: STATUS): StatusDef<USER_STATUSES, STATUS>;
    reactOnStatusChanged(customReaction: IConsumer<Status<USER_STATUSES>>): this;
    alwaysOn<STATUS extends keyof USER_STATUSES & keyof USER_MUTATORS>(stateName: STATUS, def: ReactionCb<USER_STATUSES, STATUS, USER_MUTATORS>): this;
    start(initialStatus?: StatusLike<USER_STATUSES>): this;
    toStateAll(): ConanState<Status>;
    toState<STATUS extends keyof USER_STATUSES>(statusName: STATUS): ConanState<USER_STATUSES[STATUS]>;
}
